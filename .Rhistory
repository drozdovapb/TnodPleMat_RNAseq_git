options(stringsAsFactors = F)
tbl <- read.delim("data/Tnod.proteinortho", na.strings = "*")
#one-to-one orthologs?
presentinall <- tbl[complete.cases(tbl), ]
onetoone <- presentinall[presentinall$X..Species == presentinall$Genes, ]
presentinall
grep(",", presentinall[1,])
presentinall[1, 15]
grep(",", presentinall[1,], invert = T)
#onetoone <- presentinall[presentinall$X..Species == presentinall$Genes, ] #too naive
nocommas <- apply(presentinall, 1, grep, ",")
warnings()
#onetoone <- presentinall[presentinall$X..Species == presentinall$Genes, ] #too naive
nocommas <- sapply(presentinall, 1, grep, ",")
#onetoone <- presentinall[presentinall$X..Species == presentinall$Genes, ] #too naive
nocommas <- apply(presentinall, 1, function(x) grep(",", x))
nocommas
#onetoone <- presentinall[presentinall$X..Species == presentinall$Genes, ] #too naive
nocommas <- sapply(presentinall, 1, function(x) grep(",", x))
#onetoone <- presentinall[presentinall$X..Species == presentinall$Genes, ] #too naive
nocommas <- lapply(presentinall, 1, function(x) grep(",", x))
#onetoone <- presentinall[presentinall$X..Species == presentinall$Genes, ] #too naive
has.commas <- apply(presentinall, 1, function(x) grep(",", x))
nocommos <- sapply(has.commas, "== 0")
nocommos <- sapply(has.commas, function(x) x == 0)
nocommas <- sapply(has.commas, function(x) x == 0)
nocommas
nocommas <- sapply(has.commas, function(x) length(x) == 0)
nocommas
onetoone <- presentinall[nocommas, ]
onetoone
complete.cases(tbl)
names(tbl)
